plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.triplan'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Thymeleaf는 Java 템플릿 엔진으로, HTML, XML, JavaScript, CSS 등의 파일을 서버에서
	// 동적으로 생성할 수 있게 해줍니다. Spring Boot와 함께 사용하면 쉽게 웹 애플리케이션의 UI를 개발할 수 있습니다.
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//웹 애플리케이션 개발에 필요한 Spring MVC, REST API, Tomcat 등의 기본 설정을 포함하고 있습니다. 웹 서비스를 빠르게 개발할 수 있게 해줍니다.
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//MyBatis는 Java의 SQL Mapper로, SQL 쿼리를 XML이나 어노테이션으로 관리할 수 있게 해줍니다. MyBatis와 Spring Boot를 쉽게 통합하여 사용할 수 있게 해줍니다.
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	//Lombok은 자바 코드에서 보일러플레이트(반복적인 코드)를 줄여주는 라이브러리입니다. getter/setter, toString, equals 등의 메서드를 자동으로 생성해줍니다.
	// 어노테이션 프로세서로 지정하여 컴파일 시에 필요한 코드를 생성합니다.
	annotationProcessor 'org.projectlombok:lombok'


	//개발 편의를 위한 도구로, 코드 변경 시 애플리케이션을 자동으로 재시작하거나, 브라우저를 자동으로 새로 고침해주는 기능을 제공합니다.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//MySQL 데이터베이스와의 연결을 위한 JDBC 드라이버입니다. 애플리케이션에서 MySQL 데이터베이스를 사용할 때 필요합니다.
	runtimeOnly 'com.mysql:mysql-connector-j'
	//Spring Boot 애플리케이션을 테스트하기 위한 다양한 라이브러리(JUnit, Mockito 등)를 포함하고 있습니다.
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JUnit 테스트를 실행할 때 필요한 런처입니다. 다양한 환경에서 JUnit 테스트를 실행할 수 있게 해줍니다.
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//Google에서 제공하는 JSON 처리 라이브러리로, Java 객체를 JSON으로 변환하거나 JSON을 Java 객체로 변환할 때 사용됩니다.
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
	//Thymeleaf 템플릿 엔진에 레이아웃 기능을 추가해주는 확장 모듈입니다. 레이아웃을 쉽게 관리할 수 있게 해줍니다.
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	//비밀번호 암호화와 같은 보안 관련 기능을 제공하는 Spring Security의 하위 모듈입니다.
	implementation 'org.springframework.security:spring-security-crypto:5.7.1'
	//이메일 전송 기능을 쉽게 구현할 수 있도록 도와주는 스타터입니다. JavaMailSender를 사용하여 이메일을 전송할 수 있습니다.
	implementation 'org.springframework.boot:spring-boot-starter-mail'


	// WebSocket 프로토콜을 사용하여 양방향 통신을 구현할 수 있게 해주는 스타터입니다.
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// SLF4J API
	//로깅 추상화 라이브러리로, 다양한 로깅 프레임워크를 일관된 방식으로 사용할 수 있게 해줍니다.
	implementation 'org.slf4j:slf4j-api'
	// Logback Classic Implementation
	//Logback은 SLF4J를 위한 로깅 프레임워크 중 하나로, 강력한 로깅 기능을 제공합니다. Logback Classic은 그 구현체입니다.
	implementation 'ch.qos.logback:logback-classic'
}

tasks.named('test') {
	useJUnitPlatform()
}